// Includes
#include "i_se_story"
#include "i_se_aux"

// Function Declarations
object ThePlayerCharacter();
void SpeakerSpeaksTextAtVolumeVolume(object Speaker, int Volume, string Text);
void distCheck();
void changePortrait();
float TheDistanceBetweenFirstObjectAndSecondObject(object FirstObject, object SecondObject);
void SpeakerSpeaksTextAtVolumeVolume_0(object Speaker_0, int Volume_0, string Text_0);
int IfStoryPointIsActive(string StoryPoint);
int IfXIsNumberOperatorY(float X, float Y, int NumberOperator);
int IfFirstTextEqualsSecondText(string FirstText, string SecondText);
void SetCreatureSPortraitToPortraitReference(object Creature, string PortraitReference);
void SetCreatureSPortraitToPortraitReference_0(object Creature_0, string PortraitReference_0);
string ThePortraitReferenceOfCreature(object Creature_1);

// Main
void main() {
    //Function Calls

    distCheck();

    //setPsuedoHeartbeat(subject);

}

// Function Definitions
object ThePlayerCharacter() {
    return GetFirstPC();
}
void SpeakerSpeaksTextAtVolumeVolume(object Speaker, int Volume, string Text) {
    AssignCommand(Speaker, SpeakString(Text, Volume));
}
void distCheck() {
    // Implicits Declaration
    // Implicits Definition
    // Variable Declarations
    string StoryPoint;
    int IsActive;
    object ThePlayerCharacter_0;
    object FirstObject;
    object SecondObject;
    float Distance;
    float X;
    float Y;
    int NumberOperator;
    int NumberComparison;
    int Question;

    // Variable Definitions
    StoryPoint = "entertown3";
    IsActive = IfStoryPointIsActive(StoryPoint);
    ThePlayerCharacter_0 = ThePlayerCharacter();
    FirstObject = ThePlayerCharacter_0;
    SecondObject = SE_AUX_GetNearestObjectByTagIncludeSelf("lamplight");
    Distance = TheDistanceBetweenFirstObjectAndSecondObject(FirstObject, SecondObject);
    X = Distance;
    Y = 5.0;
    NumberOperator = 4;
    NumberComparison = IfXIsNumberOperatorY(X, Y, NumberOperator);
    Question = NumberComparison;

    // Children
    if(Question){
        object Speaker_0;
        int Volume_0;
        string Text_0;
        Speaker_0 = SE_AUX_GetNearestObjectByTagIncludeSelf("lamplight");
        Volume_0 = TALKVOLUME_TALK;
        Text_0 = "too close";
        changePortrait();
        // Children
        SpeakerSpeaksTextAtVolumeVolume_0(Speaker_0, Volume_0, Text_0);
    } else {
        object Speaker;
        int Volume;
        string Text;
        Speaker = SE_AUX_GetNearestObjectByTagIncludeSelf("lamplight");
        Volume = TALKVOLUME_SHOUT;
        Text = "TOO FAR";
        // Children
        SpeakerSpeaksTextAtVolumeVolume(Speaker, Volume, Text);
    }
    //DelayCommand(0.01, WhenModuleSHeartBeats(object subject));

}

void changePortrait(){
    object Creature_1;
    string PortraitReference_1;
    object Speaker;
    int Volume;
    string Text;
    string FirstText;
    string SecondText;
    int TextsAreEqual;
    int Question_1;
    Creature_1 = ThePlayerCharacter();
    PortraitReference_1 = ThePortraitReferenceOfCreature(Creature_1);
    Speaker = ThePlayerCharacter();
    Volume = TALKVOLUME_TALK;
    Text = PortraitReference_1;
    FirstText = PortraitReference_1;
    SecondText = "img021";
    TextsAreEqual = IfFirstTextEqualsSecondText(FirstText, SecondText);
    Question_1 = TextsAreEqual;
    // Children
    SpeakerSpeaksTextAtVolumeVolume(Speaker, Volume, Text);
    if(Question_1){
        object Creature_0;
        string PortraitReference_0;
        Creature_0 = ThePlayerCharacter();
        PortraitReference_0 = "Jack_1";
        // Children
        SetCreatureSPortraitToPortraitReference_0(Creature_0, PortraitReference_0);
    } else {
        object Creature;
        string PortraitReference;
        Creature = ThePlayerCharacter();
        PortraitReference = "img021";
        // Children
        SetCreatureSPortraitToPortraitReference(Creature, PortraitReference);
    }
}

float TheDistanceBetweenFirstObjectAndSecondObject(object FirstObject, object SecondObject) {
    return GetDistanceBetween(FirstObject, SecondObject);
}
void SpeakerSpeaksTextAtVolumeVolume_0(object Speaker_0, int Volume_0, string Text_0) {
    AssignCommand(Speaker_0, SpeakString(Text_0, Volume_0));
}
int IfStoryPointIsActive(string StoryPoint) {
    return SE2_Story_GetState(GetFirstPC(), StoryPoint) == STORY_POINT_STATE_ENABLED;
}
int IfXIsNumberOperatorY(float X, float Y, int NumberOperator) {
    int numberOperator = NumberOperator;
    if(numberOperator == 0)
        return X > Y;
    else if(numberOperator == 1)
        return X < Y;
    else if(numberOperator == 2)
        return X == Y;
    else if(numberOperator == 3)
        return X >= Y;
    else if(numberOperator == 4)
        return X <= Y;
    else
        return FALSE;
}

int IfFirstTextEqualsSecondText(string FirstText, string SecondText) {
    return FirstText == SecondText;
}
void SetCreatureSPortraitToPortraitReference(object Creature, string PortraitReference) {
    SetPortraitResRef(Creature, PortraitReference);
}
void SetCreatureSPortraitToPortraitReference_0(object Creature_0, string PortraitReference_0) {
    SetPortraitResRef(Creature_0, PortraitReference_0);
}
string ThePortraitReferenceOfCreature(object Creature_1) {
    return GetPortraitResRef(Creature_1);
}